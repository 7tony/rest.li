/*
   Copyright (c) 2012 LinkedIn Corp.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/

package com.linkedin.restli.tools.idlgen;

import com.linkedin.restli.internal.server.model.ResourceModelEncoder.DocsProvider;
import com.sun.javadoc.ClassDoc;
import com.sun.javadoc.MethodDoc;
import com.sun.javadoc.ParamTag;
import java.lang.reflect.Method;

/**
 * Specialized {@link DocsProvider} whose documentation comes from the Javadoc Doclet {@link RestLiDoclet}.
 *
 * @author dellamag
 */
public class DocletDocsProvider implements DocsProvider
{
  /**
   * @param docletId the unique ID generated by
   * {@link RestLiDoclet#generateJavadoc(String, java.io.PrintWriter, java.io.PrintWriter, java.io.PrintWriter, String[])}
   */
  public DocletDocsProvider(long docletId)
  {
    _docletId = docletId;
  }

  @Override
  public String getClassDoc(Class<?> resourceClass)
  {
    final ClassDoc doc = RestLiDoclet.getClassDoc(_docletId, resourceClass);
    if (doc == null)
    {
      return null;
    }

    return buildDoc(doc.commentText());
  }

  @Override
  public String getMethodDoc(Method method)
  {
    final MethodDoc doc = RestLiDoclet.getMethodDoc(_docletId, method);
    if (doc == null)
    {
      return null;
    }

    return buildDoc(doc.commentText());
  }

  @Override
  public String getParamDoc(Method method, String name)
  {
    final MethodDoc methodDoc = RestLiDoclet.getMethodDoc(_docletId, method);
    if (methodDoc != null)
    {
      for (ParamTag tag: methodDoc.paramTags())
      {
        if (name.equals(tag.parameterName()))
        {
          return buildDoc(tag.parameterComment());
        }
      }
    }

    return null;
  }

  private String buildDoc(String docText)
  {
    if (docText != null && !docText.isEmpty())
    {
      return docText;
    }

    return null;
  }

  private final long _docletId;
}
